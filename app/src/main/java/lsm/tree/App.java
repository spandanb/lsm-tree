/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package lsm.tree;


interface MemTableIface {
    public <K, V> MemTableAddStatus  add(byte[] key, byte[] value);
    public <K> MemTableDeleteStatus  delete(byte[] key);

    public <K> MemTableFindStatus  find(byte[] key);

}

public class App {
    public String getDataDir() {
        return "/some/data/dir";
    }

    public static void main(String[] args) {
        // 1.initialize:
        // todo: use a struct to keep track of "state"
        // directory where main data file and write ahead log will be written
        System.out.println(new App().getDataDir());

        // the db will eventually be exposed from a library.
        // a library is passive; the requests would come from the application
        // invoking the library, which we'll call "the client"
        // drawing inspiration from sqlite, the methods invoked would be
        // open -> opens a connection to db
        // exec -> execute a statement; perhaps more simply add(key, value), del(key, value), get(key)
        // close -> close a connection and persist state



    }
}
